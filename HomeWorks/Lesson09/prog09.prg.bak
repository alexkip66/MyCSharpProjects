Знакомство с языками программирования (семинары)
Урок 9. Рекурсия
Задача 64: Задайте значение N. Напишите программу, которая выведет все натуральные числа в промежутке от N до 1. Выполнить с помощью рекурсии.
N = 5 -> "5, 4, 3, 2, 1"
N = 8 -> "8, 7, 6, 5, 4, 3, 2, 1"

Задача 66: Задайте значения M и N. Напишите программу, которая найдёт сумму натуральных элементов в промежутке от M до N.
M = 1; N = 15 -> 120
M = 4; N = 8. -> 30

Задача 68: Напишите программу вычисления функции Аккермана с помощью рекурсии. Даны два неотрицательных числа m и n.
m = 2, n = 3 -> A(m,n) = 9
m = 3, n = 2 -> A(m,n) = 29


1.

using System;

class Program
{
    static void Main()
    {
        Console.Write("Enter a value for N: ");
        int N = int.Parse(Console.ReadLine());

        PrintNaturalNumbers(N);
    }

    static void PrintNaturalNumbers(int num)
    {
        if (num > 0)
        {
            Console.Write(num + ", ");
            PrintNaturalNumbers(num - 1);
        }
        else
        {
            Console.WriteLine("1");
        }
    }
}


2.

using System;

class Program
{
    static void Main()
    {
        Console.Write("Enter the value of M: ");
        int M = int.Parse(Console.ReadLine());

        Console.Write("Enter the value of N: ");
        int N = int.Parse(Console.ReadLine());

        int sum = 0;
        for (int i = M; i <= N; i++)
        {
            sum += i;
        }

        Console.WriteLine("The sum of natural numbers from " + M + " to " + N + " is: " + sum);
    }
}


3.

using System;

class Program
{
    static int Ackermann(int m, int n)
    {
        if (m == 0)
            return n + 1;
        else if (n == 0)
            return Ackermann(m - 1, 1);
        else
            return Ackermann(m - 1, Ackermann(m, n - 1));
    }

    static void Main()
    {
        int m = 2;
        int n = 3;
        int result = Ackermann(m, n);
        Console.WriteLine($"A({m},{n}) = {result}");
    }
}
